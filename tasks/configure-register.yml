---

- name: Retrieve all MAC addresses
  set_fact:
    _freeipa_client__mac_addresses: "{{ (
                                          _freeipa_client__mac_addresses|d([]) +
                                          [ hostvars[inventory_hostname]['ansible_'~(item|regex_replace('[-:]', '_'))]['macaddress'] ]
                                        )|unique }}"
  with_items: '{{ ansible_interfaces }}'
  when: (not item|match("("~(freeipa_client__interface_name_exclusions|join("|"))~")") ) and
        'ansible_'~(item|regex_replace('[-:]', '_')) in hostvars[inventory_hostname] and
        'macaddress' in hostvars[inventory_hostname]['ansible_'~(item|regex_replace('[-:]', '_'))] and
        hostvars[inventory_hostname]['ansible_'~(item|regex_replace('[-:]', '_'))]['macaddress']|match('^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$')

- name: Generate SSHFP entries from SSH public keys
  set_fact:
    _freeipa_client__sshfp_keys: "{{ _freeipa_client__sshfp_keys|d([])|union([
        (item.value~' '~hostvars[inventory_hostname][item.key])|ssh_key_string_to_sshfp('SHA-1'),
        (item.value~' '~hostvars[inventory_hostname][item.key])|ssh_key_string_to_sshfp('SHA-256')
      ]) }}"
  with_dict: '{{ freeipa_client__ssh_keys_type_mapping }}'
  when: freeipa_client__ipa_sshfp_update and hostvars[inventory_hostname][item.key] is defined

- name: Register host in FreeIPA server
  ipa_host:
    description:          '{{ freeipa_client__ipa_description|d(omit) }}'
    fqdn:                 '{{ freeipa_client__ipa_fqdn }}'
    ip_address:           '{{ freeipa_client__ipa_dns_ip|d(omit) }}'
    mac_address:          '{{ _freeipa_client__mac_addresses|d([]) }}'
    ns_hardware_platform: '{{ freeipa_client__ipa_ns_hardware_platform|d(omit) }}'
    ns_host_location:     '{{ freeipa_client__ipa_ns_host_location|d(omit) }}'
    ns_os_version:        '{{ freeipa_client__ipa_ns_os_version }}'
    ipa_host:             '{{ freeipa_client__ipa_enroll_host }}'
    ipa_pass:             '{{ freeipa_client__ipa_enroll_pass }}'
    ipa_user:             '{{ freeipa_client__ipa_enroll_user }}'
    state:                present
  register: _freeipa_client__manual_host_register
  failed_when: "_freeipa_client__manual_host_register.msg is defined and
        _freeipa_client__manual_host_register.msg != 'response host_mod: no modifications to be performed'"
  delegate_to: '{{ freeipa_client__ipa_delegate_to if freeipa_client__ipa_delegate_to is defined else omit }}'

# Not before ansible 2.5
#- name: Ensure DNS zone exists
  #ipa_dnszone:
    #zone_name: '{{ freeipa_client__ipa_dns_zone_name }}'
    #ipa_host:  '{{ freeipa_client__ipa_enroll_host }}'
    #ipa_pass:  '{{ freeipa_client__ipa_enroll_pass }}'
    #ipa_user:  '{{ freeipa_client__ipa_enroll_user }}'
    #state:     present
  #when: freeipa_client__ipa_sshfp_update or freeipa_client__ipa_dns_update
  #ignore_errors: true
  #delegate_to: "{{ freeipa_client__ipa_delegate_to if freeipa_client__ipa_delegate_to is defined else omit }}"

#- name: Ensure DNS entry exists
  #ipa_dnsrecord:
    #zone_name:    '{{ freeipa_client__ipa_dns_zone_name }}'
    #record_name:  '{{ item.name }}'
    #record_type:  "{{ item.type|d('A') }}"
    #record_value: '{{ item.data }}'
    #ipa_host:     '{{ freeipa_client__ipa_enroll_host }}'
    #ipa_pass:     '{{ freeipa_client__ipa_enroll_pass }}'
    #ipa_user:     '{{ freeipa_client__ipa_enroll_user }}'
    #state:        present
  #with_items: '{{ freeipa_client__ipa_dns_records }}'
  #when: freeipa_client__ipa_dns_update
  #ignore_errors: true
  #delegate_to: "{{ freeipa_client__ipa_delegate_to if freeipa_client__ipa_delegate_to is defined else omit }}"

#- name: Update SSHFP DNS records for host
  #shell: >
    #( echo '{{ freeipa_client__ipa_enroll_pass }}' | kinit '{{ freeipa_client__ipa_enroll_user }}' ) &&
    #( if [[
            #$(ipa dnsrecord_show '{{ freeipa_client__ipa_dns_zone_name }}' '{{ freeipa_client__ipa_dns_entry_name }}' --raw | grep --count --extended-regexp '({{ _freeipa_client__sshfp_keys|map(attribute="fingerprint")|list|join("|") }})') -ne {{ _freeipa_client__sshfp_keys|length }}
            #||
            #$(ipa dnsrecord_show '{{ freeipa_client__ipa_dns_zone_name }}' '{{ freeipa_client__ipa_dns_entry_name }}' --raw | grep --count 'sshfprecord') -ne {{ _freeipa_client__sshfp_keys|length }}
          #]]; then
    #ipa dnsrecord_mod '{{ freeipa_client__ipa_dns_zone_name }}' '{{ freeipa_client__ipa_dns_entry_name }}' {% for item in _freeipa_client__sshfp_keys %} --sshfp-rec='{{ item["algorythm"] }} {{ item["digest_type"] }} {{ item["fingerprint"] }}'{% endfor %} && echo '_CHANGED_'; result=$?;
    #else echo '_UNCHANGED_'; result=0;
    #fi);
    #kdestroy;
    #exit $result
  #when: freeipa_client__ipa_sshfp_update
  #register: _freeipa_client__sshfp_update
  #ignore_errors: true
  #changed_when: "_freeipa_client__sshfp_update.stdout|search('_CHANGED_')"
  #failed_when: _freeipa_client__sshfp_update|failed
                #or (
                  #_freeipa_client__sshfp_update.stderr|search('ERROR') and
                  #not _freeipa_client__sshfp_update.stderr|search('no modifications to be performed')
                #)
  #delegate_to: "{{ freeipa_client__ipa_delegate_to if freeipa_client__ipa_delegate_to is defined else omit }}"

#- name: Create hostgroups in FreeIPA server
  #ipa_hostgroup:
    #cn:          '{{ item.name }}'
    #description: "{{ item.description|d('') }}"
    #hostgroup:   '{{ item.hostgroup|d(omit) }}'
    #ipa_host:    '{{ freeipa_client__ipa_enroll_host }}'
    #ipa_pass:    '{{ freeipa_client__ipa_enroll_pass }}'
    #ipa_user:    '{{ freeipa_client__ipa_enroll_user }}'
    #state:       "{{ item.state|d('present') }}"
  #with_items: '{{ freeipa_client__ipa_hostgroups_rules }}'
  #when: freeipa_client__ipa_hostgroups_update
  #register: _freeipa_client__hostgroups
  #failed_when: "_freeipa_client__hostgroups.msg is defined and
        #_freeipa_client__hostgroups.msg != 'response host_mod: no modifications to be performed'"
  #ignore_errors: true
  #delegate_to: "{{ freeipa_client__ipa_delegate_to if freeipa_client__ipa_delegate_to is defined else omit }}"

#- name: Add this host to location hostgroup members in FreeIPA server
  #ipa_hostgroup:
    #cn:       '{{ item.hostgroup.cn[0] }}'
    #host:     '{{ item.hostgroup.member_host|d([]) + [freeipa_client__ipa_fqdn] }}'
    #ipa_host: '{{ freeipa_client__ipa_enroll_host }}'
    #ipa_pass: '{{ freeipa_client__ipa_enroll_pass }}'
    #ipa_user: '{{ freeipa_client__ipa_enroll_user }}'
    #state:    "{{ item.state|d('present') }}"
  #with_items: '{{ _freeipa_client__hostgroups.results }}'
  #when: freeipa_client__ipa_hostgroups_update and
          #_freeipa_client__hostgroups|success and
          #item.hostgroup.cn|length == 1 and
          #freeipa_client__ipa_fqdn not in item.hostgroup.member_host|d([])
  #register: _freeipa_client__hostgroups_member
  #failed_when: "_freeipa_client__hostgroups_member.msg is defined and
        #_freeipa_client__hostgroups_member.msg != 'response host_mod: no modifications to be performed'"
  #ignore_errors: true
  #delegate_to: "{{ freeipa_client__ipa_delegate_to if freeipa_client__ipa_delegate_to is defined else omit }}"
