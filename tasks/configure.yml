---

- include_tasks: configure-manually.yml
  when: ansible_os_family in ['Debian']

- include_tasks: configure-client.yml
  when: ansible_os_family in ['RedHat']


### KERBEROS


- name: Install and configure Kerberos in client mode
  include_role:
    name: kerberos-client
  vars:
    kerberos_client__keytab_deploy_remote_host: '{{ freeipa_client__ipa_enroll_host }}'
    kerberos_client__keytab_principal: '{{ freeipa_client__keytab_principal }}'
    kerberos_client__keytab_deploy_tmp_file: '{{ freeipa_client__krb_keytab_tmp_file }}'
    kerberos_client__keytab_deploy_remote_genkey_command: "echo '{{ freeipa_client__ipa_enroll_pass }}' | kinit '{{ freeipa_client__ipa_enroll_user }}' && ipa-getkeytab --principal {{ freeipa_client__keytab_principal|replace('@'~freeipa_client__realm, '') }} --keytab {{ freeipa_client__krb_keytab_tmp_file }}; ret=$?; kdestroy; exit $?"
    kerberos_client__keytab_deploy_remote_genkey_nolog: true
    kerberos_client__include_dirs:
      - /var/lib/sss/pubconf/krb5.include.d
    kerberos_client__defaults:
      default_realm:        '{{ freeipa_client__realm }}'
      dns_lookup_realm:     'false'
      dns_lookup_kdc:       'false'
      rdns:                 'false'
      ticket_lifetime:      24h
      forwardable:          'true'
      udp_preference_limit: 0
    kerberos_client__realms: "{{ {}|combine({
      freeipa_client__realm: {
        'kdc': freeipa_client__server,
        'master_kdc': freeipa_client__server,
        'admin_server': freeipa_client__server,
        'kpasswd_server': freeipa_client__server,
        'default_domain': freeipa_client__domain,
        'pkinit_anchors': 'FILE:'~freeipa_client__ca_path,
        'pkinit_pool': 'FILE:'~freeipa_client__ca_path
      }
    }) }}"
    kerberos_client__domains: "{{
        {
          freeipa_client__domain: freeipa_client__realm,
          '.'~freeipa_client__domain: freeipa_client__realm,
          ansible_fqdn: freeipa_client__realm
        }|
        combine( {} if ansible_domain == freeipa_client__domain else {
            ansible_domain: freeipa_client__realm,
            '.'~ansible_domain: freeipa_client__realm
          })|
        combine( {} if (freeipa_client__realm|lower) == freeipa_client__domain else {
            (freeipa_client__realm|lower): freeipa_client__realm,
            '.'~(freeipa_client__realm|lower): freeipa_client__realm
        })
     }}"
    kerberos_client__dbmodules: "{{ {}|combine({
      freeipa_client__realm: ( {}|
        combine({'db_library': 'ipadb.so'} if freeipa_client__is_ipaserver else {})
      )
    }) }}"



# SSSD


- name: Install and configure SSSD
  include_role:
    name: sssd
  vars:
    sssd__services: "{{ sssd__services_base|union(['ifp'] if freeipa_client__is_ipaserver else []) }}"
    sssd__services_base:
      - sudo
      - nss
      - pam
      - ssh
    sssd__services_settings:
      nss:
        homedir_substring: /home
        memcache_timeout: '{{ 600 if freeipa_client__is_ipaserver else 300 }}'
    sssd__domains: ['{{ freeipa_client__realm|lower }}']
    sssd__domains_settings: "{{ {}|combine({
      (freeipa_client__realm|lower): {
        'cache_credentials': 'True',
        'krb5_store_password_if_offline': 'True',
        'id_provider': 'ipa',
        'auth_provider': 'ipa',
        'access_provider': 'ipa',
        'chpass_provider': 'ipa',
        'ipa_domain': (freeipa_client__realm|lower),
        'ldap_tls_cacert': freeipa_client__ca_path,
        'ipa_hostname': ansible_fqdn,
        'ipa_server': (['_srv_'] if not freeipa_client__is_ipaserver else [])|union([freeipa_client__server])|join(', '),
        'ipa_server_mode': 'True' if freeipa_client__is_ipaserver else 'False',
        'dns_discovery_domain': freeipa_client__domain,
      }
    }) }}"


- import_tasks: configure-pam.yml
