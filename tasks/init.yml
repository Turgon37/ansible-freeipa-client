---

- name: Assert required variables
  assert:
    that:
      - freeipa_client__domain is defined
      - freeipa_client__server is defined
      - freeipa_client__ipa_enroll_host is defined
      - freeipa_client__ipa_enroll_user is defined
      - freeipa_client__ipa_enroll_pass  is defined

- name: Retrieve all MAC addresses
  set_fact:
    _freeipa_client__mac_addresses: "{{ (
                                          _freeipa_client__mac_addresses|d([]) +
                                          [ hostvars[inventory_hostname]['ansible_'~(item|regex_replace('[-:]', '_'))]['macaddress'] ]
                                        )|unique }}"
  with_items: '{{ ansible_interfaces }}'
  when: (not item|match("("~(freeipa_client__interface_name_exclusions|join("|"))~")") ) and
        'ansible_'~(item|regex_replace('[-:]', '_')) in hostvars[inventory_hostname] and
        'macaddress' in hostvars[inventory_hostname]['ansible_'~(item|regex_replace('[-:]', '_'))] and
        hostvars[inventory_hostname]['ansible_'~(item|regex_replace('[-:]', '_'))]['macaddress']|match('^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$')

- name: Generate SSHFP entries from SSH public keys
  set_fact:
    _freeipa_client__sshfp_keys: "{{ _freeipa_client__sshfp_keys|d([])|union([
        (item.value~' '~hostvars[inventory_hostname][item.key])|ssh_key_string_to_sshfp('SHA-1'),
        (item.value~' '~hostvars[inventory_hostname][item.key])|ssh_key_string_to_sshfp('SHA-256')
      ]) }}"
  with_dict: '{{ freeipa_client__ssh_keys_type_mapping }}'
  when: freeipa_client__ipa_sshfp_update and hostvars[inventory_hostname][item.key] is defined
